# Ericsson
[include]
	path = /etc/git-setup/gitconfig

# Git Core Developers Recommendations
[tag]
	sort = version:refname
[commit]
	verbose = true
[diff]
	colorMoved = true
	algorithm = histogram
	mnemonicPrefix = true
	renames = true
[grep]
	patternType = perl

# Personal
[user]
	name = Hugo Ankarloo
	email = hugo.ankarloo@ericsson.com
[core]
	editor = vim
	pager = less -FRX --mouse
[pager]
  difftool = true
  #blame = less -+M
  #blame = more
[log]
	date = iso
[color]
	ui = auto
[alias]
	alias = "! (\necho '# GLOBAL'\ngit config --global -l\necho '# LOCAL'\ngit config --local -l\n) | perl -0777 -pe 's/\\n(?!\\$|#|[-a-z0-9]+[.][-a-z0-9]+=)/\\x1F/g' 2>/dev/null | sed -nE -e '/^#/p' -e '/^alias[.]/{' -e 's///' -e 's/=/\\t= /' -e 's/\\x1F/\\n\\t/g' -e 'p' -e '}' | column -t -s\"$(printf \"\\t\")\" | sed -e 's/^#  */# /' -e 's/\\s*$//'"
	st = status
	br = branch
	co = checkout
	ci = commit
	sw = switch
	root = rev-parse
	head = rev-list -n1 --abbrev-commit HEAD
	amend = commit --amend --date=now
	diffd = diff --no-ext-diff
	difft = "difft --color=always \"$@\" | sed \"s/\\[94;3m/[03;34m/g\" && true"
	dft = difftool
	wdiff = diffd --ws-error-highlight=all --color-words --word-diff-regex='[A-Za-z_]+|[0-9]+([.][0-9]+)?|[0-9]+(:[0-9]+)+|[^[:space:]]'
	shw = show --ext-diff
	hist = "! test -t 1 && color='--color' || color='' && git log --graph --abbrev-commit --decorate --date=short --format=format:'%C(red)%h%C(reset) %C(yellow)%cs%C(reset) %C(green)[%an]%C(reset) %C(white)%s%C(reset)%C(bold blue)%d%C(reset)' $color \"$@\" | awk '1 #Restore missing newline at EOF' | sed -E 's,(\\]\\S*) ,\\1░,' | column -t -s░ | sed -E 's,(\\s+)(\\S*\\[[^][]+\\]\\S*)(\\s+) ,\\3\\2\\1,' && true"
	hist0 = log --graph --abbrev-commit --decorate --date=short --format=format:'%C(red)%h%C(reset) %C(yellow)%ad%C(reset) %C(green)[%an]%C(reset) %C(white)%s%C(reset)%C(bold blue)%d%C(reset)'
	hist00 = "! test -t 1 && color='--color' || color='' && git log --graph --abbrev-commit --decorate --date=short --format=format:'%C(red)%h%C(reset) %C(yellow)%ad%C(reset) %C(green)[%an]%C(reset) %C(white)%s%C(reset)%C(bold blue)%d%C(reset)' $color \"$@\" | awk '1 #Restore missing newline at EOF' | sed -E 's,(\\]\\S*) ,\\1░,' | column -t -s░ | sed -E 's,(\\s+)(\\S*\\[[A-Z][^]]+\\]\\S*)(\\s+) ,\\3\\2\\1,' && true"
	hist1 = hist0 --all
	hist2 = log --graph --abbrev-commit --decorate --date=iso --format=format:'%C(red)%h%C(reset) %C(dim yellow)%ad%C(reset) %C(dim green)[%an]%C(reset)%C(bold blue)%d%C(reset)%n''         %C(white)%s%C(reset)'
	new-branch = ! tracking="$(git rev-parse --symbolic-full-name --abbrev-ref @{u} 2>/dev/null)" && [ "$tracking" ] && git checkout --track "$tracking" -b
	copy-branch = ! git switch -c \"$1\" && git branch --set-upstream-to=origin/master
	gush-old = "! (IFS=\"#\" && test \"$(echo \"#${*}#\" | sed \"s/#--draft#//\")\" != \"#${*}#\") && eval \"set -- $(IFS=\"#\" && echo \"#${*}#\" | sed \"s/#--draft#/##/g;s/^##$//;s/##/#/g;s/^#\\|#$/\\\"/g;s/#/\\\" \\\"/g\")\" && draft=\"%draft\" || draft=\"\" && tracking=\"$(git rev-parse --symbolic-full-name --abbrev-ref @{u} 2>/dev/null)\" && [ \"$tracking\" ] && remote=\"${tracking%%/*}\" && branch=\"${tracking##*/}\" && git push \"$remote\" \"HEAD:refs/for/$branch$draft\""
	gush = "! tracking=\"$(git rev-parse --symbolic-full-name --abbrev-ref @{u} 2>/dev/null)\" && [ \"$tracking\" ] && remote=\"${tracking%%/*}\" && branch=\"${tracking#*/}\" && git push \"$remote\" \"HEAD:refs/for/$branch\""
	go = "! ( trap 'rm -f -- \"$tmprulefile\"' EXIT ; gitroot=\"$(git rev-parse --show-toplevel)\" ; tmprulefile=\"$(mktemp -p \"$gitroot\")\" ; echo '{ modelVersion: 2.0, import: { common: common-properties.yaml }, properties: [{ goargs: help }], env: [PWD], rules: { go: [{task: go, docker-image: common.go-builder, docker-envs: [\"GOCACHE=${env.PWD}/.bob/gocache\"], cmd: \"go ${goargs}\" }] }}' >\"$tmprulefile\" ; \"$gitroot\"/bob/bob --quiet --strict --validate-properties --property goargs=\"${1:-help}\" --workdir \"$gitroot\" -r \"$tmprulefile\" go ) || false"
